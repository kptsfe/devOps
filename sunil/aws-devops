Creating a new AWS Account
Creating Linux Machine on AWS
How to connect to Linux Machine?
Using Putty Terminal

Linux Commands:
Create a file
Remove a file
Create a directory
Delete a directory
Go to previous directory
How to create 4 directories ( d1 --ÔÉ† d2 ---ÔÉ† d3 ---ÔÉ† d4 )
Rmdir fails  rm ‚Äìr
Long list
What if file name starts .
How to see hidden files
How to create hidden directory
Combination of options in ls command
How to copy a file

To see the list of files according to timestamp (  ls ‚Äìlt )
To know the current user
Difference between $ and #
How to switch from one user to another user ( su )
Importance of ‚Äúsudo‚Äù  ‚Äúsuper user do‚Äù
To get the current date ( date )
To get the current month ( cal )
Understanding file permissions
Changing the file permissions ( chmod )
Numerical and alphabetical notations

Pipe command in linux
What is apt repository?
How to install the packages from apt repository
Working with vi editor

--
aws.amazon.com
EC2
Linux -- Start

--------------

putty

ppk

ubuntu@ec2-13-127-21-85.ap-south-1.compute.amazonaws.com

----------------------------

two types of users
--------------------------



1) Normal User  --  $

2) root user   --  #


-----------------------


ubuntu  -------------->  root


    sudo   su  root

sudo  --- superuser do

su  ubuntu
----------------------------------------------
Three types of permissions


read                   --  r
write              ---   w
execute        ---     x

-----------------------
Three type of users

1) owner
2) group
3) others


      _ _ _               _ _ _            _ _ _
  

   owner               group           others

  
  rw-                 rw-                    r   --      f6

------------------------
change the permissions

1 ) Numerical notation
2) Alphabetical notation


Numerical notation
-----------------------

read
write
execute


r   --------------  4
w -------------   2
x  -----------     1


  rw-             rw-             r--                  --  f6

 rwx            rw-               r--                       f6


chmod  764              f6

chmod 777     f6

7 ----------  rwx
6  --- rw
5 --       r-x
4 ------------  r
3 --------- wx
2 ------ w
1 ----- x
0  ---- No permissions


chmod 700   f6



2) Alphabetical notation


owner  --------   u
group      -------  g
others   --------- o


+
-
  
 rw-          rw-      r--                 --  f1

rwx          rw-      r--                 --  f1

chmod  u+x     f1

chmod  u-x     f1

-----------------------------



   rw-      rw-       r--                        --  f20

   rw-       r--        r-x           -- f20



chmod  g-w,o+x     f20

---



++++++++++++++++

The pipe command in Linux, represented by the vertical bar symbol '|'.
The purpose of the pipe command is to connect the output of one command directly into the input of another

The Pipe is a command in Linux that lets you use two or more commands,
 such that output of one command serves as input to the next.

 head -5 f10 | tail -1 

  date | wc -l   
+++++++++++++++++++++++++


++++++++++

 d1
  -------- d2
                --------------d3
                                     --------------------d4


---------------------







An APT repository is a collection of packages 
APT repository allows you to perform package install, removal, upgrade operations on individual packages.

tree d1 

To install packages

apt-get install packagename


Step 1: Update apt  repository 
Step 2: Install the package



Syntax of Step 1:  Update apt repository
sudo apt-get update

Syntax of Step 2: Install the required package

sudo apt-get install package_name
sudo apt-get install tree









To remove the package
sudo apt-get remove tree

-----------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Vi Editor
-------------
Basic editor in linux

To create a file
i  - to go to insert mode

:wq  -- save and exit

:q!  -- exit without saving

Default mode - command mode


Esc - to come out of insert mode  to command mode
dd   - to delete a line

yy  --  to copy the line
p  - to paste  below

++++++++++++++++++++++++++++++++++++++++++++++





What is Git?
-----------------------

Git is  a Version controlling tool  /  SCM  tool.  ( Source code mgmt tool )


Version control systems are tools that help a software team manage changes to source code over time.

For almost all software projects, the source code is like the crown jewels - a precious asset whose value must be protected. 

VCS are sometimes known as SCM (Source Code Management) tool.

Most widely used modern version control system in the world today is Git. Git is a mature, actively maintained open source tool originally developed in 2005 by Linus Torvalds, the famous creator of the Linux operating system kernel. 

Two types Version Controlloing
1) Centrailized Version controlling 
2) Distributed Version controlling

Git is Distributed Version controlling.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

The commands :wq! and :q! are used in Vim, a powerful text editor in Unix/Linux. Here's what each does:

‚úÖ :wq! ‚Äî Write and Quit (Force)
:w = write (save) the file

:q = quit

! = force the action, even if the file is read-only

üü¢ Usage:

vim
Copy
Edit
:wq!
Saves the file and exits, even if the file is marked read-only (use with caution).

‚úÖ :q! ‚Äî Quit Without Saving (Force)
:q = quit

! = force quit even if there are unsaved changes

üü† Usage:

vim
Copy
Edit
:q!
Exits Vim without saving any changes.

üö´ Do NOT confuse them:
Command	Action
:wq	Save and quit (normal)
:wq!	Force save and quit (e.g., read-only file)
:q	Quit (fails if unsaved changes)
:q!	Force quit without saving

Want a full Vim cheat sheet too?

======
apt & apt-get


ChatGPT said:
apt and apt-get are both command-line tools used on Debian-based Linux distributions (like Ubuntu) for managing packages, but there are some differences in usage and intent.

üîπ apt
Introduced in Ubuntu 16.04 and Debian 8 as a more user-friendly front-end to apt-get, apt-cache, etc.

Meant for end users.

Combines common functionalities of apt-get, apt-cache, and more into a single command.

Provides nicer output formatting and progress bars.

Common apt commands:

bash
Copy
Edit
sudo apt update          # Update package index
sudo apt upgrade         # Upgrade installed packages
sudo apt install pkg     # Install a package
sudo apt remove pkg      # Remove a package
sudo apt search pkg      # Search for a package
sudo apt list --installed # List installed packages
üîπ apt-get
Older and still fully supported.

Meant more for scripts and advanced users.

Offers more granular control, though it may not be as user-friendly.

Common apt-get commands:

bash
Copy
Edit
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install pkg
sudo apt-get remove pkg
sudo apt-get dist-upgrade  # Smarter upgrade, can remove/install packages as needed
‚úÖ Summary
Feature	apt	apt-get
Introduced in	Ubuntu 16.04 / Debian 8	Much earlier
Intended for	End users	Scripts / advanced users
Output	User-friendly with colors	Plain text
Stability	Changes more often	Very stable

You can use either, but prefer apt for day-to-day interactive use and apt-get in scripts or when detailed control is needed.

Would you like a cheat sheet or printable reference for apt commands?







You said:
cheat sheet

cheat sheet


ChatGPT said:
Here‚Äôs a concise APT & APT-GET Cheat Sheet for Debian-based systems like Ubuntu:
Link: https://github.com/kptsfe/devOps/blob/main/sunil/apt_cheat_sheet.pdf

üõ†Ô∏è APT & APT-GET Cheat Sheet
üîÑ Update & Upgrade
Command	Description
sudo apt update	Update package index
sudo apt upgrade	Upgrade all upgradable packages
sudo apt full-upgrade	Upgrade with auto-remove/add
sudo apt-get dist-upgrade	Same as full-upgrade (older)

üì¶ Package Installation & Removal
Command	Description
sudo apt install <package>	Install a package
sudo apt remove <package>	Remove a package (keep config)
sudo apt purge <package>	Remove package and config files
sudo apt autoremove	Remove unneeded packages
sudo apt reinstall <package>	Reinstall a package

üîç Search & Info
Command	Description
apt search <package>	Search available packages
apt show <package>	Show package details
apt list --installed	List installed packages
apt list --upgradable	Show packages that can be upgraded

üß∞ Cleaning Up
Command	Description
sudo apt clean	Clear downloaded .deb files
sudo apt autoclean	Remove obsolete .deb files

üõ°Ô∏è Repository Management
Command	Description
sudo add-apt-repository ppa:<ppa-name>	Add a PPA (Ubuntu only)
sudo apt-add-repository <repo>	Add any repo
sudo apt-key add <keyfile>	Add repo signing key (deprecated)
sudo apt update	Refresh after adding repo

üìù Notes
Use apt for interactive use (better UX).

Use apt-get in scripts for consistency and backward compatibility.

================
Git:

What is Git
Types of Version Controlling	
What is git bash?
Configure Git
Types of files
Git init Observations
How to move files to staging area
How to know the status of the files
How to move file to local repository
How to see list of commits

Quick revision ( Untracked files, staged files, commited files )
Understanding the need for branching
How to create new branch (git branch  branchname )
How to see the list of branches ( git branch )
Move the control to new branch (git checkout  branchname )
git log --oneline
git log --oneline --graph --all

To merge  branch with  master ( git merge branchname )
Understanding .gitignore file

Git Rebase ( git rebase master )
Understanding difference between merge and rebase
Re arrange the commit history
How to merge the commits
How to selectively pickup commits from child branch

Git  Amend
Handling file conflicts
How to go back to previous version of code?
Remote Repository ( Github )


notes:
day-6
What is Git?
-----------------------

Git is  a Version controlling tool  /  SCM  tool.  ( Source code mgmt tool )


Version control systems are tools that help a software team manage changes to source code over time.

For almost all software projects, the source code is like the crown jewels - a precious asset whose value must be protected. 

VCS are sometimes known as SCM (Source Code Management) tool.

Most widely used modern version control system in the world today is Git. Git is a mature, actively maintained open source tool originally developed in 2005 by Linus Torvalds, the famous creator of the Linux operating system kernel. 

Two types Version Controlloing
1) Centrailized Version controlling 
2) Distributed Version controlling

Git is Distributed Version controlling.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


What is gitbash ?

How to configure username and email for git

$ git init

$ git config --global   user.name "sunilkumark11"
$ git config --global   user.email  "sunilkumark11@gmail.com"

 TO check the configurations
$ git config  --global  --list

working directory ------> staging area -------> LR

untracked files
staged files
commited files

+++++++++++++

How to make working directory as git repository

$ git init

-Observation -

++++++++++++++++
===================

day-7
Branching
--------------

This feature is provided in git.
Developer often work on multiple functionalities.

It is recommended that developers should create code related to different functionalities  on seprate branches.
Each branch will have the code related to specific functionality.
This helps the development team in creating the code in an uncluttered way.
Later this code can be merged with master branch.
Default branch of git is "Master"


Developer

Home Page   --  f1  f2   f3
Services   --  f4  f5
Contact US  --  f6  f7   f8

branch


git  init  --  master

+++++++++++++++++++++++++++++++++


git branch  branchname 

git  branch test

++++++++++++++

day-8
Git  rebase
==============
This is called as fastforward merge.
The commits from the child branch are added to the top of the master branch.
This is helpful when we want code from a branch to be reflected as the latest working version on master.


Rearrange the commit order
---------------------------
git rebase  -i   HEAD~4


Merge the commit's using "squash"
--------------------------------
git rebase -i HEAD~4
Remove the pick word and replace it with squash

------------------

How to selectively pickup the commit's from child branch ( Cherry-pick )

$ git  cherry-pick   a618fd1    1e82b9e     ( commit id's)


+++++++++++++++++++++
day-9
+++++++++++++++++++++


Git Amend
----------------

$ git commit  --amend  -m "a"


How to go back to previous version of code
----------------------------------------------
git reset --hard c9187df



