Git and GitHub Tutorial in Tamil | The Ultimate Guide to VC, Branching, Merging & Pull Request.
https://www.youtube.com/watch?v=VIBWdLLq9kQ

install visual studio code.
! tab tab or html5 - to auto create html page
install extensions:
Prettier - Code formatter, Live server, Auto Rename Tag
goto settings - search - format on - select format on paste & format on save, default formatter (Prettier)
-----------------------------------------------------------

1. set or view the Git username, you can use the following commands:

✅ Set Git username (global)
git config --global user.name "Your Name"

✅ Set Git username (for a specific repo)
git config user.name "Your Name"
Use this inside the specific repository folder.

🔍 Check current Git username
git config user.name           # For current repo
git config --global user.name # For global config

2. If you're looking to set or view your email address in Git, here are the common commands:

✅ Set Git Email Address
1. Globally (for all repositories):
git config --global user.email "your-email@example.com"

2. Locally (for just the current repository):
git config user.email "your-email@example.com"

🔍 Check Current Git Email Address
1. Globally:
git config --global user.email

2. Locally:
git config user.email

-----------------------------------
Git & GitHub Complete Tutorial for Beginners | Simplest GitHub Full Course | Tamil
https://www.youtube.com/watch?v=WzO6VynQ7UM

Conventional Commits:
https://www.conventionalcommits.org/en/v1.0.0/

Here’s a handy list of commonly used Git commands, grouped by purpose:

🔧 Basic Setup
bash
Copy
Edit
git config --global user.name "Your Name"
git config --global user.email "you@example.com"
📁 Repository Management
bash
Copy
Edit
git init                        # Initialize a new Git repo
git clone <url>                # Clone a repo
💾 Staging and Committing
bash
Copy
Edit
git status                     # Show status of changes
git add <file>                 # Stage a file
git add .                      # Stage all changes
git commit -m "Message"        # Commit with a message
git commit -am "Message"       # Add & commit tracked files
🔄 Branching
bash
Copy
Edit
git branch                     # List branches
git branch <name>              # Create new branch
git checkout <name>            # Switch branch
git checkout -b <name>         # Create & switch branch
git merge <branch>             # Merge branch into current
git branch -d <name>           # Delete branch
⬆️⬇️ Remote Repositories
bash
Copy
Edit
git remote -v                  # List remotes
git remote add origin <url>    # Add remote
git push -u origin <branch>    # Push branch to remote
git push                       # Push changes
git pull                       # Pull latest changes
git fetch                      # Download changes (no merge)
🕒 History & Logs
bash
Copy
Edit
git log                        # View commit history
git log --oneline              # One-line summary
git show <commit>              # Show commit details
🚨 Undo Changes
bash
Copy
Edit
git reset <file>               # Unstage a file
git checkout -- <file>         # Discard file changes
git reset --hard HEAD          # Reset all changes
git revert <commit>            # Revert a commit
📌 Stashing
bash
Copy
Edit
git stash                      # Save changes temporarily
git stash pop                  # Reapply stashed changes
Want cheat-sheet format, real-world examples, or advanced Git stuff like rebase, cherry-pick, or submodules?




